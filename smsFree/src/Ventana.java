
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.apache.http.HttpHost;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.conn.HttpHostConnectException;
import org.apache.http.conn.params.ConnRoutePNames;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Win7
 */
public class Ventana extends javax.swing.JFrame {

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();

        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SMS GRATIS");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Pais:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar..", "Argentina", "Bolivia", "Brazil", "Canada", "Chile", "Colombia", "Costa Rica", "Cuba", "Ecuador", "El Salvador", "Guatemala", "Honduras", "Jamaica", "Mexico", "Panama", "Paraguay", "Peru", "Spain", "Uruguay", "USA", "Venezuela" }));
        jComboBox1.setToolTipText("Pais a Enviar");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Numero:");

        jTextField1.setToolTipText("Telefono sin \"clave\"");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Mensaje:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Estado:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Apagado");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Max Caracteres:");

        jLabel7.setText("140");

        jButton1.setBackground(new java.awt.Color(51, 153, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Enviar!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel8.setText("Proxy:");

        jTextField2.setToolTipText("Proxy ex: 127.1.0.0");
        jTextField2.setEnabled(false);

        jLabel9.setText("Port:");

        jTextField3.setToolTipText("Port ex: 80.etc..");
        jTextField3.setEnabled(false);

        jCheckBox1.setText("Desactivar Limite?");
        jCheckBox1.setToolTipText("Usa un Proxy para pasar el Limite");
        jCheckBox1.setActionCommand("Limite?");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/topic.gif"))); // NOI18N
        jMenu1.setText("Archivo");

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Exit.png"))); // NOI18N
        jMenuItem1.setText("Salir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/About.png"))); // NOI18N
        jMenu2.setText("Ayuda");

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/linkback_about.gif"))); // NOI18N
        jMenuItem2.setText("Acerca..");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCheckBox1))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        //Obtenemos numero, mensaje y pais
        String numero = jTextField1.getText();
        String Mensaje = jTextArea1.getText();
        int pais = jComboBox1.getSelectedIndex();
        int pais2 = 0;

        //Creamos String para almacenar Info
        String url = "";
        String proxy = "";
        String port = "";

        //Lista de paises
        switch (pais) {
            case 0:
                JOptionPane.showMessageDialog(null,
                        "Elije un pais de la lista", //Mensaje
                        "Error", //Título 
                        JOptionPane.ERROR_MESSAGE); //Tipo de mensaje
                break;
            case 1:
                pais2 = 374;
                url = "http://dexub.com/smsmundo/index.php";
                break;
            case 2:
                pais2 = 591;
                url = "http://dexub.com/smsmundo/index.php";
                break;
            case 3:
                pais2 = 55;
                url = "http://dexub.com/smsmundo/index.php";
                break;
            case 4:
                pais2 = 1;
                url = "http://dexub.com/smsmundo/index.php";
                break;
            case 5:
                pais2 = 56;
                url = "http://dexub.com/smsmundo/index.php";
                break;
            case 6:
                pais2 = 57;
                url = "http://dexub.com/smsmundo/index.php";
                break;
            case 7:
                pais2 = 506;
                url = "http://dexub.com/smsmundo/index.php";
                break;
            case 8:
                pais2 = 53;
                url = "http://dexub.com/smsmundo/index.php";
                break;
            case 9:
                pais2 = 593;
                url = "http://dexub.com/smsmundo/index.php";
                break;
            case 10:
                pais2 = 503;
                url = "http://dexub.com/smsmundo/index.php";
                break;
            case 11:
                pais2 = 502;
                url = "http://dexub.com/smsmundo/index.php";
                break;
            case 12:
                pais2 = 504;
                url = "http://dexub.com/smsmundo/index.php";
                break;
            case 13:
                pais2 = 1876;
                url = "http://dexub.com/smsmundo/index.php";
                break;
            case 14:
                pais2 = 52;
                url = "http://dexub.com/smsmexico/index.php";
                break;
            case 15:
                pais2 = 507;
                url = "http://dexub.com/smsmundo/index.php";
                break;
            case 16:
                pais2 = 595;
                url = "http://dexub.com/smsmundo/index.php";
                break;
            case 17:
                pais2 = 51;
                url = "http://dexub.com/smsmundo/index.php";
                break;
            case 18:
                pais2 = 34;
                url = "http://dexub.com/smsmundo/index.php";
                break;
            case 19:
                pais2 = 598;
                url = "http://dexub.com/smsmundo/index.php";
                break;
            case 20:
                pais2 = 1;
                url = "http://dexub.com/smsmundo/index.php";
                break;
            case 21:
                pais2 = 598;
                url = "http://dexub.com/smsmundo/index.php";
                break;
        }

        //Obtenemos Proxy y puerto
        proxy = jTextField2.getText();
        port = jTextField3.getText();

        //Si Numero esta vacio
        if (numero.isEmpty()) {

            //Mostramos Error
            JOptionPane.showMessageDialog(null,
                    "Numero Vacio", //Mensaje
                    "Error", //Título 
                    JOptionPane.ERROR_MESSAGE); //Tipo de mensaje
        } //Mensaje Vacio
        else if (Mensaje.isEmpty()) {

            //Mostramos Error
            JOptionPane.showMessageDialog(null,
                    "El mensaje debe tener una longitud de 5 minimo", //Mensaje
                    "Error", //Título 
                    JOptionPane.ERROR_MESSAGE); //Tipo de mensaje
        } //Si proxy esta activado y falta ponerlo
        else if (url.contains("smsmundo") && jCheckBox1.isSelected() == true && proxy.isEmpty() && port.isEmpty()) {

            //Mostramos Error
            JOptionPane.showMessageDialog(null,
                    "Inserta un Proxy y Puerto", //Mensaje
                    "Error", //Título 
                    JOptionPane.ERROR_MESSAGE); //Tipo de mensaje
        } //Enviar sin Proxy
        else if (url.contains("smsmundo") && jCheckBox1.isSelected() == false && !numero.isEmpty() && !Mensaje.isEmpty()) {

            try {

                //Creamos conexion
                DefaultHttpClient client = new DefaultHttpClient();

                //Decimos q mandaremos peticion post
                HttpPost post = new HttpPost(url);

                //Agregamos Header
                post.setHeader("User-Agent", "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:46.0) Gecko/20100101 Firefox/46.0");

                //Info que mandaremos
                List<NameValuePair> urlParameters = new ArrayList<>();
                urlParameters.add(new BasicNameValuePair("country", Integer.toString(pais2)));
                urlParameters.add(new BasicNameValuePair("tel", numero));
                urlParameters.add(new BasicNameValuePair("msg", Mensaje));
                urlParameters.add(new BasicNameValuePair("enviar", ""));

                //Eviamos Info
                post.setEntity(new UrlEncodedFormEntity(urlParameters));

                //Obtenemos Respuesta
                HttpResponse response = client.execute(post);

                //Respuesta de la pagina
                System.out.println("Response Code : "
                        + response.getStatusLine().getStatusCode());

                //Guardamos Buffer
                BufferedReader rd = new BufferedReader(
                        new InputStreamReader(response.getEntity().getContent()));

                //Creamos String para guadar resultado
                StringBuilder result = new StringBuilder();

                //lINEA POR LINEA PASSARA POR AQUI
                String line = "";

                //lEEMOS LINE Y RECORREMOS HASTA EL FINAL
                while ((line = rd.readLine()) != null) {

                    //aLMACENAS RESULTADO
                    result.append(line);

                    //cHECAMOS rESPUESTA
                    if (line.contains("Excediste limite")) {
                        jLabel5.setForeground(Color.red);
                        jLabel5.setText("Limite");
                    } else if (line.contains(">Mensaje enviado correctamente a")) {
                        jLabel5.setForeground(Color.GREEN);
                        jLabel5.setText("Enviado");
                    }

                }

                //Terminamos Conexion
                client.getConnectionManager().shutdown();

            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            }

            //Enviamos al mundo con proxy
        } else if (url.contains("smsmundo") && jCheckBox1.isSelected() == true && !proxy.isEmpty() && !port.isEmpty() && !numero.isEmpty() && !Mensaje.isEmpty()) {

            try {

                HttpHost proxyus = new HttpHost(proxy, Integer.valueOf(port), "http");

                //Creamos conexion
                DefaultHttpClient client = new DefaultHttpClient();

                client.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxyus);

                //Decimos q mandaremos peticion post
                HttpPost post = new HttpPost(url);

                //Agregamos Header
                post.setHeader("User-Agent", "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:46.0) Gecko/20100101 Firefox/46.0");

                //Info que mandaremos
                List<NameValuePair> urlParameters = new ArrayList<>();
                urlParameters.add(new BasicNameValuePair("country", Integer.toString(pais2)));
                urlParameters.add(new BasicNameValuePair("tel", numero));
                urlParameters.add(new BasicNameValuePair("msg", Mensaje));
                urlParameters.add(new BasicNameValuePair("enviar", ""));

                //Eviamos Info
                post.setEntity(new UrlEncodedFormEntity(urlParameters));

                //Obtenemos Respuesta
                HttpResponse response = client.execute(post);

                //Respuesta de la pagina
                System.out.println("Response Code : "
                        + response.getStatusLine().getStatusCode());

                //Guardamos Buffer
                BufferedReader rd = new BufferedReader(
                        new InputStreamReader(response.getEntity().getContent()));

                //Creamos String para guadar resultado
                StringBuilder result = new StringBuilder();

                //lINEA POR LINEA PASSARA POR AQUI
                String line = "";

                //lEEMOS LINE Y RECORREMOS HASTA EL FINAL
                while ((line = rd.readLine()) != null) {

                    //aLMACENAS RESULTADO
                    result.append(line);

                    //cHECAMOS rESPUESTA
                    if (line.contains("Excediste limite")) {
                        jLabel5.setForeground(Color.red);
                        jLabel5.setText("Limite");
                    } else if (line.contains(">Mensaje enviado correctamente a")) {
                        jLabel5.setForeground(Color.GREEN);
                        jLabel5.setText("Enviado");
                    }

                }

                //Terminamos Conexion
                client.getConnectionManager().shutdown();

            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            } catch (HttpHostConnectException e) {
                jLabel5.setForeground(Color.red);
                jLabel5.setText("Bad Proxy");
            } catch (IOException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            }

            //Enviaremos a mexico sin proxy
        } else if (url.contains("smsmexico") && jCheckBox1.isSelected() == false && !numero.isEmpty() && !Mensaje.isEmpty()) {

            try {

                //Creamos conexion
                DefaultHttpClient client = new DefaultHttpClient();

                //Decimos q mandaremos peticion post
                HttpPost post = new HttpPost(url);

                //Agregamos Header
                post.setHeader("User-Agent", "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:46.0) Gecko/20100101 Firefox/46.0");

                //Info que mandaremos
                List<NameValuePair> urlParameters = new ArrayList<>();
                urlParameters.add(new BasicNameValuePair("country", ""));
                urlParameters.add(new BasicNameValuePair("tel", numero));
                urlParameters.add(new BasicNameValuePair("msg", Mensaje));
                urlParameters.add(new BasicNameValuePair("enviar", ""));

                //Eviamos Info
                post.setEntity(new UrlEncodedFormEntity(urlParameters));

                //Obtenemos Respuesta
                HttpResponse response = client.execute(post);

                //Respuesta de la pagina
                System.out.println("Response Code : "
                        + response.getStatusLine().getStatusCode());

                //Guardamos Buffer
                BufferedReader rd = new BufferedReader(
                        new InputStreamReader(response.getEntity().getContent()));

                //Creamos String para guadar resultado
                StringBuilder result = new StringBuilder();

                //lINEA POR LINEA PASSARA POR AQUI
                String line = "";

                //lEEMOS LINE Y RECORREMOS HASTA EL FINAL
                while ((line = rd.readLine()) != null) {

                    //aLMACENAS RESULTADO
                    result.append(line);

                    //cHECAMOS rESPUESTA
                    if (line.contains("Excediste limite")) {
                        jLabel5.setForeground(Color.red);
                        jLabel5.setText("Limite");
                    } else if (line.contains(">Mensaje enviado correctamente a")) {
                        jLabel5.setForeground(Color.GREEN);
                        jLabel5.setText("Enviado");
                    }

                }

                //Terminamos Conexion
                client.getConnectionManager().shutdown();

            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            }

        } //Enviamos a mexico con proxy
        else if (url.contains("smsmexico") && jCheckBox1.isSelected() == true && !proxy.isEmpty() && !port.isEmpty() && !numero.isEmpty() && !Mensaje.isEmpty()) {

            try {

                HttpHost proxyus = new HttpHost(proxy, Integer.valueOf(port), "http");

                //Creamos conexion
                DefaultHttpClient client = new DefaultHttpClient();

                client.getParams().setParameter(ConnRoutePNames.DEFAULT_PROXY, proxyus);

                //Decimos q mandaremos peticion post
                HttpPost post = new HttpPost(url);

                //Agregamos Header
                post.setHeader("User-Agent", "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:46.0) Gecko/20100101 Firefox/46.0");

                //Info que mandaremos
                List<NameValuePair> urlParameters = new ArrayList<>();
                urlParameters.add(new BasicNameValuePair("country", Integer.toString(pais2)));
                urlParameters.add(new BasicNameValuePair("tel", numero));
                urlParameters.add(new BasicNameValuePair("msg", Mensaje));
                urlParameters.add(new BasicNameValuePair("enviar", ""));

                //Eviamos Info
                post.setEntity(new UrlEncodedFormEntity(urlParameters));

                //Obtenemos Respuesta
                HttpResponse response = client.execute(post);

                //Respuesta de la pagina
                System.out.println("Response Code : "
                        + response.getStatusLine().getStatusCode());

                //Guardamos Buffer
                BufferedReader rd = new BufferedReader(
                        new InputStreamReader(response.getEntity().getContent()));

                //Creamos String para guadar resultado
                StringBuilder result = new StringBuilder();

                //lINEA POR LINEA PASSARA POR AQUI
                String line = "";

                //lEEMOS LINE Y RECORREMOS HASTA EL FINAL
                while ((line = rd.readLine()) != null) {

                    //aLMACENAS RESULTADO
                    result.append(line);

                    //cHECAMOS rESPUESTA
                    if (line.contains("Excediste limite")) {
                        jLabel5.setForeground(Color.red);
                        jLabel5.setText("Limite");
                    } else if (line.contains(">Mensaje enviado correctamente a")) {
                        jLabel5.setForeground(Color.GREEN);
                        jLabel5.setText("Enviado");
                    }

                }

                //Terminamos Conexion
                client.getConnectionManager().shutdown();

            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            } catch (HttpHostConnectException e) {
                jLabel5.setForeground(Color.red);
                jLabel5.setText("Bad Proxy");
            } catch (IOException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            jTextField2.setEnabled(true);
            jTextField3.setEnabled(true);
        } else if (evt.getStateChange() == ItemEvent.DESELECTED) {
            jTextField2.setEnabled(false);
            jTextField3.setEnabled(false);
        }
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    //Salimos
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    //Acerca del Programa
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        //Mostramos Error
        JOptionPane.showMessageDialog(null,
                "               Gracias a:\n\nIxtix (Master)\nChuidiang (MASTER)\netc..", //Mensaje
                "Creado por Saske46", //Título 
                JOptionPane.INFORMATION_MESSAGE); //Tipo de mensaje
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Ventana().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
